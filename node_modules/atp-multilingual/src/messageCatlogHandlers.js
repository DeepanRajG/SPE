
let getAllQuery = (metadata) => JSON.stringify({
    "db_name": process.env.REACT_APP_METADATA_DB_NAME,
    "entity": "message_catalog",
    "filter": `message_catalog.metadataid == '${metadata}'`,
    "return_fields": "{[message_catalog.title] :{list : message_catalog.language, created_date : message_catalog.createddate} }"
});

let getSingleQuery = (metadata) => JSON.stringify({
    "db_name": process.env.REACT_APP_METADATA_DB_NAME,
    "entity": "message_catalog",
    "filter": `message_catalog.metadataid == '${metadata}'`,
    "sort": "message_catalog.createddate desc",
    "return_fields": "{[message_catalog.title] :{list : message_catalog.language, created_date : message_catalog.createddate} }"
});

const getAllList = async (metadata) => {
    const payload = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: getAllQuery(metadata)
    };
    let _lang = await fetch(process.env.REACT_APP_ARANGO_URL_READ, payload)
        .then(response => response.json())
        .then(data => data);
    let obj = {}
    _lang.result.map((val, i) => {
        let key = Object.keys(val)[0]
        obj[key.trim()] = val[key].list
        if (i == _lang.result.length - 1) {
            localStorage.setItem("messagecatlogIndexDate", val[key].created_date)
        }
    })
    localStorage.setItem("messageCatlogList", JSON.stringify(obj))
    return true
}

const validateMessageCatlog = async (metadata) => {
    let payload = {
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        body: getSingleQuery(metadata)
    };

    let _lang = await fetch(process.env.REACT_APP_ARANGO_URL_READ, payload)
        .then(response => response.json())
        .then(data => data);

    let lastCreatedDate = null
    
    _lang.result.map((val, i) => {
        let key = Object.keys(val)[0];
        lastCreatedDate = val[key].created_date
    })
    let messagecatlogIndexDate = localStorage.messagecatlogIndexDate;
    if (messagecatlogIndexDate) {
        if (lastCreatedDate != parseInt(messagecatlogIndexDate)) {
            getAllList()
        }
    }
    return true
}

export const initialMessageCatlog = (metadata) => {
    // if (localStorage.messageCatlogList) {
    //     validateMessageCatlog(metadata)
    // } else {
        getAllList(metadata)
    // }
}

export const getMessageCatlogValue = (key, lang) => {
    if (localStorage.messageCatlogList) {
        let list = JSON.parse(localStorage.messageCatlogList)
        if (list[key]) {
            return list[key][lang] ? list[key][lang] : ""
        } else {
            return key
        }
    } else {
        return key
    }
}
